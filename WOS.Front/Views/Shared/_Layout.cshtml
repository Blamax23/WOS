<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    @* <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" /> *@
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/panier/cart.css" asp-append-version="true" />
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" rel="stylesheet">
    <link rel="icon" type="image/x-icon" href="~/favicon.ico" />
</head>

@using WOS.Model;
@using WOS.Dal.Interfaces;
@inject IGlobalDataSrv _globalDataSrv;
@inject IConfiguration _configuration;
@{
    var cartCookie = Context.Request.Cookies["Cart"];
    var cartItemCount = 0;
    List<CartItem> cartItems = new List<CartItem>();

    if (!string.IsNullOrEmpty(cartCookie))
    {
        cartItems = System.Text.Json.JsonSerializer.Deserialize<List<CartItem>>(cartCookie);
        cartItemCount = cartItems.Sum(item => item.Quantity);
    }

    string linkTiktok = _configuration.GetSection("LinksSocialMedia")["Tiktok"];
    string linkInstagram = _configuration.GetSection("LinksSocialMedia")["Instagram"];
    string linkTwitter = _configuration.GetSection("LinksSocialMedia")["Twitter"];
    string linkSnapchat = _configuration.GetSection("LinksSocialMedia")["Snapchat"];

    if (User.Identity.IsAuthenticated)
    {
        Context.Response.Cookies.Append("isConnected", "true");
    }
    else
    {
        Context.Response.Cookies.Append("isConnected", "false");
    }
}

<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <div class="sections">
                        <div class="pages">
                            <ul class="navbar-nav flex-grow-1">
                                <li class="nav-item">
                                    <a class="nav-link nav-pages text-dark" asp-area="" asp-controller="Home" asp-action="Index">Accueil</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link nav-pages text-dark" asp-area="" asp-controller="Product" asp-action="Index">Sneakers</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link nav-pages text-dark" asp-area="" asp-controller="Question" asp-action="Index">FAQ</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link nav-pages text-dark" asp-area="" asp-controller="Contact" asp-action="Index">Contact</a>
                                </li>
                            </ul>
                        </div>
                        <div class="logo">
                            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index"><img src="~/src/WosLogos/logoWosSneakers.png" /></a>
                        </div>
                    </div>
                    <div class="user-space">
                        <ul class="user-nav navbar-nav flex-grow-1">
                            <li class="nav-item">
                                <a id="cart-icon" class="nav-link text-dark">
                                    <i class="bi bi-bag"></i>
                                    <span id="cart-count" class="cart-count">@cartItemCount</span>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Index"><i class="bi bi-person"></i></a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>

        <div id="cart-modal" class="cart-modal">
            <div class="cart-modal-content">
                <div class="cart-header">
                    <h3>Votre panier</h3>
                    <button id="close-cart" class="close-cart-btn">&times;</button>
                </div>
                <div class="cart-items">
                    @if (cartItems.Count() > 0)
                    {
                        foreach (var item in cartItems)
                        {
                            var productStock = _globalDataSrv.ProduitTailles.FirstOrDefault(pt => pt.ProduitId == item.ProductId && pt.Taille == item.Size).Stock;

                            <div class="cart-item" data-product-id="item-@item.ProductId" data-size="@item.Size">
                                <img src="@Url.Content(item.ImageUrl)" alt="@item.Name" class="cart-item-image" />
                                <div class="cart-item-details">
                                    <p class="cart-item-name">@item.Name</p>
                                    <div class="item-infos">
                                        <p class="cart-item-price">Taille: <span style="font-weight: 500;">@item.Size</span></p>
                                    </div>
                                    <div class="cart-item-quantity">
                                        <div class="quantity-zone">
                                            <label for="quantity-@item.ProductId">Quantité :</label>
                                            <select id=" quantity-@item.ProductId" data-size="@item.Size" data-product-id="@item.ProductId" class="quantity-input">

                                                @for (int i = 1; i <= Math.Min(productStock, 15); i++)
                                                {
                                                    @if (i == 1)
                                                    {
                                                        <option value="@i" selected>@i</option>
                                                    }
                                                    else if (i == item.Quantity)
                                                    {
                                                        <option value="@i" selected>@i</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@i">@i</option>
                                                    }
                                                }
                                            </select>
                                        </div>
                                        <p class="cart-item-price"><span style="font-weight: 500;">@item.Price.ToString("C")</span></p>
                                    </div>
                                </div>
                                <i class="bi bi-trash remove-btn" data-product-id="@item.ProductId" data-size="@item.Size"></i>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="empty-cart">Votre panier est vide.</p>
                    }
                </div>
                <div class="cart-footer">
                    <button class="btn confirm-btn">Voir le panier</button>
                </div>
            </div>
        </div>
    </div>

    <footer class="footer">
        <div class="container footer-container">
            <div class="footer-section">
                <h5>Liens Utiles</h5>
                <ul>
                    <li><a asp-area="" asp-controller="Home" asp-action="Index">Accueil</a></li>
                    <li><a asp-area="" asp-controller="Product" asp-action="Index">Nos Produits</a></li>
                    <li><a asp-area="" asp-controller="Question" asp-action="Index">FAQ</a></li>
                    <li><a asp-area="" asp-controller="Contact" asp-action="Index">Contact</a></li>
                </ul>
            </div>

            <div class="footer-section">
                <h5>Informations Légales</h5>
                <ul>
                    <li><a asp-area="" asp-controller="Home" asp-action="CGV">Conditions Générales de Vente</a></li>
                    <li><a asp-area="" asp-controller="Home" asp-action="MentionsLegales">Mentions Légales</a></li>
                    <li><a asp-area="" asp-controller="Home" asp-action="Privacy">Politique de Confidentialité</a></li>
                    <li><a asp-area="" asp-controller="Home" asp-action="Retour">Politique de Retour</a></li>
                    <li><a asp-area="" asp-controller="Home" asp-action="Cookies">Gestion des Cookies</a></li>
                </ul>
            </div>

            <div class="footer-section">
                <h5>Suivez-nous</h5>
                <div class="social-links">
                    <a href="@linkSnapchat"><i class="bi bi-snapchat"></i></a>
                    <a href="@linkInstagram"><i class="bi bi-instagram"></i></a>
                    <a href="@linkTwitter"><i class="bi bi-twitter"></i></a>
                    <a href="@linkTiktok"><i class="bi bi-tiktok"></i></a>
                </div>
            </div>

            <div class="footer-section">
                <h5>Newsletter</h5>
                <form class="newsletter-form">
                    <input type="email" placeholder="Votre email" required />
                    <button type="submit">S'inscrire</button>
                </form>
            </div>
        </div>

        <div class="footer-bottom">
            <p>&copy; @DateTime.Now.Year - WOS Sneakers. Tous droits réservés.</p>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

<script>
    $(".btnSearch").click(function () {
        let inputSearch = $(".searchSneakers");
        let iconSearch = $(".iconSearch");
        if (!inputSearch.hasClass("visible")) {
            inputSearch.removeClass("closing");
            inputSearch.addClass("visible");
            inputSearch.focus();
            iconSearch.removeClass("bi-search");
            iconSearch.addClass("bi-x-lg");
        } else {
            if (inputSearch.val().trim() !== "") {
                $(".formSearch").submit();
            } else {
                inputSearch.removeClass("visible");
                inputSearch.addClass("closing");
                iconSearch.removeClass("bi-x-lg");
                iconSearch.addClass("bi-search");
            }
        }
    });

    function changeIcon() {
        let inputSearch = $(".searchSneakers");
        let iconSearch = $(".iconSearch");
        if (inputSearch.val() == "") {
            iconSearch.removeClass("bi-search");
            iconSearch.addClass("bi-x-lg");
        } else {
            iconSearch.removeClass("bi-x-lg");
            iconSearch.addClass("bi-search");
        }
    }

    $(".searchSneakers").on("input", changeIcon);
    $(".searchSneakers").on("focusout", changeIcon);
</script>

<script>
    $(document).ready(function () {
        // Affiche le modal
        $('#cart-icon').click(function () {
            $('#cart-modal').css('right', '0');
        });

        // Ferme le modal
        $('#close-cart').click(function () {
            $('#cart-modal').css('right', '-100%');
        });

        $('.quantity-input').change(function () {
            const productId = $(this).data('product-id');
            // On récupère la taille du produit
            const size = $(this).data('size');
            const newQuantity = $(this).val();

            console.log(newQuantity);

            // Si la quantité est 0, supprimer l'article
            if (newQuantity == 0) {
                $.ajax({
                    url: '/Panier/DeleteInCart',
                    type: 'POST',
                    data: { productId: productId, size: size },
                    success: function () {
                        $(`[data-product-id="item-${productId}"][data-size="${size}"]`).remove();

                        // On additionne les quantités de chaque item
                        const cartItemCount = $('.cart-item').map(function () {
                            return parseInt($(this).find('.quantity-input').val());
                        }).get().reduce((a, b) => a + b, 0);

                        $('#cart-count').text(cartItemCount);
                    },
                    error: function () {
                        alert("Impossible de supprimer l'article.");
                    }
                });
            }
            else {
                $.ajax({
                    url: '/Panier/UpdateQuantity',
                    type: 'POST',
                    data: { productId: productId, size: size, quantity: newQuantity },
                    success: function () {
                        // On additionne les quantités de chaque item
                        const cartItemCount = $('.cart-item').map(function () {
                            return parseInt($(this).find('.quantity-input').val());
                        }).get().reduce((a, b) => a + b, 0);

                        $('#cart-count').text(cartItemCount);
                    },
                    error: function () {
                        alert("Impossible de supprimer l'article.");
                    }
                });
            }
        });

        // Supprimer un article directement
        $(document).on('click', '.remove-btn', function () {
            const productId = $(this).data('product-id');
            const size = $(this).data('size');

            console.log($(this));
            $.ajax({
                url: '/Panier/DeleteInCart',
                type: 'POST',
                data: { productId: productId, size: size },
                success: function () {
                    $(`[data-product-id= "item-${productId}"][data-size="${size}"]`).remove();

                    const cartItemCount = $('.cart-item').length;
                    $('#cart-count').text(cartItemCount);
                },
                error: function () {
                    alert("Impossible de supprimer l'article.");
                }
            });
        });

        // Valider le panier
        $('.cart-footer .confirm-btn').click(function () {
            const cartItems = $('.cart-item').map(function () {
                let productId = $(this).data('product-id').replace('item-', '');
                let size = $(this).data('size');
                let quantity = $(this).find('.quantity-input').val();

                productId = parseInt(productId);
                quantity = parseInt(quantity);
                size = size.toString();

                return {
                    productId: productId,
                    size: size,
                    quantity: quantity
                };
            }).get();

            // On stocke dans la session les items du panier
            document.cookie = "CartItems=" + encodeURIComponent(JSON.stringify(cartItems)) + "; path=/";

            // Dans document.cookie, on récupère le cookie isConnected et sa valeur
            // let isConnected = document.cookie.split(';').find(cookie => cookie.includes('isConnected')).split('=')[1];
            let isConnected = @User.Identity.IsAuthenticated.ToString().ToLower();
            // Dans document.cookie, on stocke ReturnUrl
            if (!isConnected) {
                document.cookie = "RedirectUrl=/Panier/Display; path=/";
                window.location.href = '/Account/Login';
            } else {
                $.ajax({
                    url: '/Panier/ViewCart',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(cartItems),
                    success: function (response) {
                        // Redirige vers une autre page ou affiche les données
                        window.location.href = '/Panier/Display';
                    },
                    error: function (err) {
                        console.error('Error:', err);
                    }
                });
            }
        });
    });

</script>

<script>
    // document.addEventListener("DOMContentLoaded", function () {
    //     if (!getCookie("cookiesAccepted")) {
    //         document.getElementById("cookieModal").style.display = "flex";
    //     }
    // });

    function handleCookieConsent(consent) {
        setCookie("cookiesAccepted", consent, 365);
        saveConsent(consent);
        document.getElementById("cookieModal").style.display = "none";
    }

    function saveConsent(consent) {
        fetch("/Account/SaveConsent", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(consent.toString())
        });
    }

    function setCookie(name, value, days) {
        let d = new Date();
        d.setTime(d.getTime() + (days * 24 * 60 * 60 * 1000));
        document.cookie = name + "=" + value + "; expires=" + d.toUTCString() + "; path=/";
    }

    function getCookie(name) {
        let match = document.cookie.match(new RegExp("(^| )" + name + "=([^;]+)"));
        return match ? match[2] : null;
    }
</script>
