@using WOS.Model;

@model IEnumerable<ModeLivraison>;

<link href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script>
<script src="//unpkg.com/leaflet/dist/leaflet.js"></script>
<link rel="stylesheet" type="text/css" href="//unpkg.com/leaflet/dist/leaflet.css" />

<script src="//widget.mondialrelay.com/parcelshop-picker/jquery.plugin.mondialrelay.parcelshoppicker.min.js"></script>


<div class="head-panier">
    <div class="step step-1 active">
        <div class="circle" id="step-1">1</div>
        <p>Validation</p>
    </div>
    <div class="line active" id="between-step-1-2"></div>
    <div class="step step-2 active">
        <div class="circle" id="step-2">2</div>
        <p>Informations</p>
    </div>
    <div class="line" id="between-step-2-3"></div>
    <div class="step step-3">
        <div class="circle" id="step-3">3</div>
        <p>Paiement</p>
    </div>
</div>
<div class="purchaseWay">
    <div class="infos-delivery-zone">
        <h2>Information de livraison </h2>
        <div class="form-info-purchase">
            <div class="address-zone">
                <div class="input-div address-place-zone">
                    <label for="address">Adresse</label>
                    <input type="text" id="address" name="address" required>
                </div>
                <div class="input-div postal-code-zone">
                    <label for="postal-code">Code postal</label>
                    <input type="text" id="postal-code" name="postal-code" maxlength="10" required>
                </div>
                <div class="input-div city-zone">
                    <label for="city">Ville</label>
                    <input type="text" id="city" name="city" required>
                </div>
                <div class="input-div country-zone">
                    <label for="country">Pays</label>
                    <select id="country" name="country">
                        <option value="">Sélectionnez un pays</option>
                    </select>
                </div>
            </div>
        </div>
        <h2>Mode de livraison</h2>
        <div class="delivery-modes">
            <div class="error-relais"><p>Veuillez sélectionner un point-relais.</p></div>
            <div class="error-delivery"><p>Veuillez sélectionner un mode de livraison.</p></div>
            <div class="domicile-mode">
                <div class="delivery-mode">
                    @foreach (var mode in Model)
                    {
                        if (new[] { "UPS", "Colissimo", "Mondial Relay", "Main Propre" }.Any(substring => mode.Nom.Contains(substring, StringComparison.OrdinalIgnoreCase)))
                        {
                            <div class="mode mode-@mode.Nom.Replace(" ", "")" data-name-mode="@mode.Nom">
                                @if (mode.Nom == "Main Propre")
                                {
                                    <i class="bi bi-box-seam-fill"></i>
                                }
                                else
                                {

                                    <img src="@Url.Content(mode.PathLogo)" />
                                }
                                <p><strong>@mode.Nom</strong></p>
                                <p>+@mode.PrixLivraison.ToString("C")</p>
                            </div>
                        }
                    }
                    @* <div class="home-delivery">
                    <div class="home-accordion">
                    <h3>A domicile</h3>
                    <i class="bi bi-caret-right-fill"></i>
                    </div>
                    <div class="modes-home collapsed">
                    @foreach (var mode in Model)
                    {
                    if (new[] { "UPS", "Colissimo" }.Any(substring => mode.Nom.Contains(substring, StringComparison.OrdinalIgnoreCase)))
                    {
                    <div class="mode" data-name-mode="@mode.Nom">
                    <img src="@Url.Content(mode.PathLogo)" />
                    <p><strong>@mode.Nom</strong></p>
                    <p>+@mode.PrixLivraison.ToString("C")</p>
                    </div>
                    }
                    }
                    </div>
                    </div>
                    <div class="relay-delivery">
                    <div class="relay-accordion">
                    <h3>En point-relais</h3>
                    <i class="bi bi-caret-right-fill"></i>
                    </div>
                    <div class="modes-relay collapsed">
                    @foreach (var mode in Model)
                    {
                    if (!new[] { "UPS", "Colissimo" }.Any(substring => mode.Nom.Contains(substring, StringComparison.OrdinalIgnoreCase)))
                    {
                    <div class="mode" data-name-mode="@mode.Nom">
                    <img src="@Url.Content(mode.PathLogo)" />
                    <p><strong>@mode.Nom</strong></p>
                    <p>+@mode.PrixLivraison.ToString("C")</p>
                    </div>
                    }
                    }
                    </div>
                    </div> *@
                </div>
            </div>
            <div class="relay-mode">
                <div class="search-relay">
                    <h3>Sélectionnez votre point relais</h3>
                    <div id="Zone_Widget"></div>
                    <input type="hidden" id="Target_Widget" />
                    <div style="display:none;">
                        <!-- Balises HTML utilisées dans la fonction de CallBack pour reçevoir des données à afficher -->
                        <div style="font-weight:bold;text-decoration:underline;">Callback zone</div><br />
                        <div>data.ID = <span id="cb_ID"></span></div>
                        <div>data.Nom = <span id="cb_Nom"></span></div>
                        <div>data.Adresse = <span id="cb_Adresse"></span></div>
                        <div>data.CP = <span id="cb_CP"></span></div>
                        <div>data.Ville = <span id="cb_Ville"></span></div>
                        <div>data.Pays = <span id="cb_Pays"></span></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="btn-actions">
            <button class="btn cancel-btn step-2-to-1">Précédent</button>
            <button class="btn confirm-btn step-2-to-3">Suivant</button>
        </div>
    </div>
</div>

<script>
    // On met un gestionnaire d'événement quand l'input de la ville change
    $('#city').on('change', function () {
        // Si l'input contient "Bourg" "en" et "Bresse", on affiche mode-MainPropre
        console.log($(this).val().toLowerCase());
        if ($(this).val().toLowerCase().includes('bourg') && $(this).val().toLowerCase().includes('en') && $(this).val().toLowerCase().includes('bresse')) {
            $('.mode-MainPropre').css("display", "flex");
        } else {
            $('.mode-MainPropre').css("display", "none");
        }
    });
    let deliveryModeHome = true;
    $.ajax({
        url: 'https://restcountries.com/v3.1/all',
        type: 'GET',
        success: function (data) {
            const $countrySelect = $('#country');
            // Trier les pays pour que la France apparaisse en premier
            data.sort((a, b) => a.name.common === 'France' ? -1 : b.name.common === 'France' ? 1 : a.name.common.localeCompare(b.name.common));



            // Ajouter les options au select
            data.forEach(function (country) {
                // Si le code ISO est FR, on lui ajoute selected
                let option = `<option value="${country.cca2}" ${country.cca2 === 'FR' ? 'selected' : ''}>${country.name.common}</option>`;

                $countrySelect.append(option);
            });

            $countrySelect.select2({
                placeholder: "Sélectionnez un pays",
                allowClear: true,
                dropdownAutoWidth: true, // Ajuste la largeur du dropdown automatiquement
                width: '100%', // Définit la largeur du select
                dropdownPosition: 'below' // assure que les options apparaissent en dessous
            });

            // On gère la largeur de la fenêtre qui s'ouvre lorsqu'on clique sur le select
            $countrySelect.on('select2:open', function (e) {
                $('.select2-dropdown').css('width', '50%');
            });
        },
        error: function (xhr, status, error) {
            console.error('Erreur :', error);
        }
    });

    // On cache error-relais si #Target_Widget change
    $('#Target_Widget').on('change', function () {
        console.log("on change le ")
        $('.error-relais').css('display', 'none');
    });

    // Click sur le bouton step-1-to-2
    $(".step-2-to-3").click(function () {
        // On cache les messages d'erreur
        $('.error-delivery').hide();
        $('.error-relais').hide();

        let stop = false;

        // On regarde si une div mode a la classe selected
        if ($('.mode.selected').length === 0) {
            $('.error-delivery').show();
            stop = true;
        } else {
            // On regarde si la div mode choisie est celle de Mondial Relay, si oui on contrôle qu'un point relais ait été choisi
            if ($('.mode.selected').data('name-mode').toLowerCase().includes('mondial relay') && $('#Target_Widget').val() === "") {
                $('.error-relais').show();
                stop = true;
            }
        }

        console.log($('#address').val());

        // On vérifie si les inputs et le select sont remplis. Si non, on met des border en rouge
        if ($('#address').val() === "") {
            console.log("c'est null");
            $('#address').css('border', '1px solid red');
            stop = true;
        } else {
            $('#address').css('border', '1px solid #ccc');
        }

        if ($('#postal-code').val() === "") {
            $('#postal-code').css('border', '1px solid red');
            stop = true;
        } else {
            $('#postal-code').css('border', '1px solid #ccc');
        }

        if ($('#city').val() === "") {
            $('#city').css('border', '1px solid red');
            stop = true;
        } else {
            $('#city').css('border', '1px solid #ccc');
        }

        if ($('#country').val() === "") {
            $('#country').css('border', '1px solid red');
            stop = true;
        } else {
            console.log($('#country').val());
            $('#country').css('border', '1px solid #ccc');
        }

        if (stop) {
            return;
        }


        localStorage.setItem('currentStep', 2);

        // On récupère le nom du mode de livraison sélectionné en fonction de la div home qui a la classe selected
        let modeName = $('.mode.selected').data('name-mode');

        // Récupérer les informations des champs
        let address = $('#address').val();
        let postalCode = $('#postal-code').val();
        let city = $('#city').val();
        let country = $('#country').val(); // Code ISO sélectionné
        let parcelShopId = $('#Target_Widget').val(); // ID du point relais sélectionné par le widget
        // On récupère les valeurs du point relais
        let parcelShop = {
            id: $('#cb_ID').text(),
            name: $('#cb_Nom').text(),
            address: $('#cb_Adresse').text(),
            postalCode: $('#cb_CP').text(),
            city: $('#cb_Ville').text(),
            country: $('#cb_Pays').text()
        };

        // Préparer les données pour stockage
        let deliveryInfo = {
            mode: deliveryModeHome,
            address: address,
            postalCode: postalCode,
            city: city,
            country: country,
            parcelShop: parcelShop,
            modeName: modeName
        };

        console.log(deliveryInfo);

        // Stocker dans la session
        // localStorage.setItem('deliveryInfo', JSON.stringify(deliveryInfo));

        console.log('Informations de livraison enregistrées :', deliveryInfo);
        // On fait une requête ajax
        $.ajax({
            url: "/Panier/NextStepPurchase",
            type: "POST",
            data: {
                actualStep: 2,
                deliveryInfo: JSON.stringify(deliveryInfo)
            },
            success: function (data) {
                $(".content").html(data);
            }
        });
    });

    // Click sur le bouton step-2-to-1
    $(".step-2-to-1").click(function () {
        localStorage.setItem('currentStep', 0);
        // On fait une requête ajax
        $.ajax({
            url: "/Panier/PreviousStepPurchase",
            type: "POST",
            data: {
                actualStep: 2
            },
            success: function (data) {
                $(".content").html(data);
            }
        });
    });

    function GetPointRelais(cp = "") {
        console.log(`Type de cp: ${typeof cp}, Valeur de cp: ${cp}`);
        // $("#Zone_Widget").empty();
        $("#Zone_Widget").MR_ParcelShopPicker({
            //
            // Settings relating to the HTML.
            //
            // JQuery selector of the HTML element receiving the Parcelshop Number (ex: here, input type text, but should be input hidden)
            Target: "#Target_Widget",
            //
            // Settings for Parcelshop data access
            //
            // Code given by Mondial Relay, 8 characters (padding right with spaces)
            // BDTEST is used for development only => a warning appears
            Brand: "BDTEST  ",
            // Default Country (2 letters) used for search at loading
            Country: "FR",
            // Default postal Code used for search at loading
            PostCode: "",
            // Delivery mode (Standard [24R], XL [24L], XXL [24X], Drive [DRI])
            ColLivMod: "24R",
            // Number of parcelshops requested (must be less than 20)
            NbResults: "7",

            OnParcelShopSelected:
                // Fonction de traitement à la sélection du point relais.
                // Remplace les données de cette page par le contenu de la variable data.
                // data: les informations du Point Relais
                function (data) {
                    $("#cb_ID").html(data.ID);
                    $("#cb_Nom").html(data.Nom);
                    $("#cb_Adresse").html(data.Adresse1 + ' ' + data.Adresse2);
                    $("#cb_CP").html(data.CP);
                    $("#cb_Ville").html(data.Ville);
                    $("#cb_Pays").html(data.Pays);
                },
            //
            // Display settings
            //
            // Enable Responsive (nb: non responsive corresponds to the Widget used in older versions=
            Responsive: true,
            // Show the results on Leaflet map usng OpenStreetMap.
            ShowResultsOnMap: true
        });
    }

    $(document).ready(function () {
        // On met un gestionnaire d'événement quand on clique sur l'input pour la livraison en point relais
        // Loading the Parcelshop picker widget into the <div> with id "Zone_Widget" with such settings:
        GetPointRelais()
    });

    $(document).ready(function () {
        $('.search-relay').hide();
        // Gestionnaire d'événements pour les inputs radio
        $('input[name="delivery-mode"]').on('change', function () {
            // Récupérer la valeur de l'input sélectionné
            let selectedValue = $(this).val();

            // Action en fonction de la sélection
            if (selectedValue === 'relais') {
                console.log('Mode de livraison sélectionné : En point relais');
                // Vous pouvez ajouter ici des actions spécifiques
                let cp = $('#postal-code').val();
                GetPointRelais(cp);
                $('.search-relay').show(); // Exemple : afficher le widget
            } else {
                console.log('Mode de livraison sélectionné : Autre');
                $('.search-relay').hide(); // Exemple : cacher le widget
            }
        });

        $('#postal-code').on('change', function () {
            let cp = $(this).val();
            GetPointRelais(cp);
        })
    });
</script>

<script>
    $(document).ready(function () {
        $('.home-accordion').on('click', function () {
            const $modesDiv = $('.modes-home'); // Sélectionne la div "modes"
            const $icon = $(this).find('i'); // Sélectionne l'icône dans le header

            // Toggle les classes pour afficher/masquer le contenu
            $modesDiv.toggleClass('expanded collapsed');

            // Animation pour le max-height
            if ($modesDiv.hasClass('expanded')) {
                $modesDiv.stop().animate({ maxHeight: $modesDiv.get(0).scrollHeight }, 300);
            } else {
                $modesDiv.stop().animate({ maxHeight: 0 }, 300);
            }

            // Rotation de l'icône
            $icon.toggleClass('rotated');
        });

        $('.relay-accordion').on('click', function () {
            const $modesDiv = $('.modes-relay'); // Sélectionne la div "modes"
            const $icon = $(this).find('i'); // Sélectionne l'icône dans le header

            // Toggle les classes pour afficher/masquer le contenu
            $modesDiv.toggleClass('expanded collapsed');

            // Animation pour le max-height
            if ($modesDiv.hasClass('expanded')) {
                $modesDiv.stop().animate({ maxHeight: $modesDiv.get(0).scrollHeight }, 300);
            } else {
                $modesDiv.stop().animate({ maxHeight: 0 }, 300);
            }

            // Rotation de l'icône
            $icon.toggleClass('rotated');
        });

        // Gestionnaire de clic sur chaque div mode
        $('.mode').on('click', function () {
            $('.search-relay').hide();
            // On retire la classe selected à toutes les div mode
            $('.mode').removeClass('selected');
            // On ajoute la classe selected à la div mode cliquée
            $(this).addClass('selected');
            deliveryModeHome = true;

            // On regarde si on a cliqué sur Mondial Relay
            if ($(this).data('name-mode').toLowerCase().includes('mondial relay')) {
                deliveryModeHome = false;
                // On affiche le widget
                $('.search-relay').show();
            }
        });
    });
</script>