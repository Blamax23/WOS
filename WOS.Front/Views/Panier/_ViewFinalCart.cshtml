@using WOS.Model;

@model IEnumerable<CartItem>;

<div class="head-panier">
    <div class="step step-1 active">
        <div class="circle" id="step-1">1</div>
        <p>Validation</p>
    </div>
    <div class="line" id="between-step-1-2"></div>
    <div class="step step-2">
        <div class="circle" id="step-2">2</div>
        <p>Informations</p>
    </div>
    <div class="line" id="between-step-2-3"></div>
    <div class="step step-3">
        <div class="circle" id="step-3">3</div>
        <p>Paiement</p>
    </div>
</div>
<div class="purchaseWay">
    <div class="viewPanier step-1">
        <h1>Votre panier</h1>
        <div class="panier">
            @foreach (var item in Model)
            {
                <div class="itemPanier">
                    <div class="item-image">
                        <img src="@Url.Content(item.ImageUrl)" />
                    </div>
                    <div class="item-infos">
                        <div class="item-title">
                            <h2>@item.Name</h2>
                            <h2 class="price">@item.Price.ToString("C")</h2>
                        </div>
                        <div class="item-details">
                            <div class="item-size">
                                <h3>Taille</h3>
                                <p>@item.Size</p>
                            </div>
                            <div class="item-quantity">
                                <h3>Quantité</h3>
                                <p>@item.Quantity</p>
                            </div>
                        </div>
                    </div>
                </div>
            }
            <div class="code-promo">
                <div class="input-code-zone">
                    <input type="text" placeholder="Code promo" name="codepromo" />
                    <button class="btn confirm-btn search-code-promo">Appliquer</button>
                </div>
                <div class="error-zone">
                    <p></p>
                </div>
            </div>
            <div class="total">
                <h2>Total</h2>
                <div class="prix-total">
                    <h2 class="old-price">@Model.Sum(x => x.Price * x.Quantity).ToString("C")</h2>
                    <h2 class="final-price">@Model.Sum(x => x.Price * x.Quantity).ToString("C")</h2>
                </div>
            </div>
            <div class="btn-actions">
                <button class="btn cancel-btn step-to-never">Annuler</button>
                <button class="btn confirm-btn step-1-to-2">Suivant</button>
            </div>
        </div>
    </div>
</div>

<script>
    function setCookie(name, value, days) {
        let expires = "";
        if (days) {
            let date = new Date();
            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
            expires = "; expires=" + date.toUTCString();
        }
        document.cookie = name + "=" + value.replace("€", "") + "; path=/" + expires;
    }

    // Click sur le bouton step-1-to-2
    $(".step-1-to-2").click(function () {
        // On set le prix total dans un cookie
        setCookie("totalPrice", $(".final-price").text().replace(" €", ""), 1);

        // On vérifie que le cookie est bien enregistré
        console.log("Cookie totalPrice:", document.cookie);

        // On fait une requête ajax
        localStorage.setItem('currentStep', 1);
        $.ajax({
            url: "/Panier/NextStepPurchase",
            type: "POST",
            data: {
                actualStep: 1
            },
            success: function (data) {
                $(".content").html(data);
            },
            error: function (xhr, status, error) {
                console.error("Erreur : ", error);
            }
        });
    });

    $(".search-code-promo").click(function () {
        var value = $("input[name='codepromo']").val();

        console.log("Requête envoyée avec value:", value);

        $.ajax({
            url: "/Panier/SearchCodePromo",
            type: "POST",
            contentType: "application/x-www-form-urlencoded; charset=UTF-8", // Ajout du contentType
            data: {
                value: value,
                prix: parseFloat($(".old-price").text().replace("€", "").trim()) // Récupérer le prix depuis le HTML
            },
            success: function (data) {
                if (data.errorMessage && data.errorMessage !== "") {
                    $(".error-zone p").text(data.errorMessage);
                    $(".error-zone").css("display", "block");
                } else {
                    $(".final-price").text(data.prix.toFixed(2) + "€");
                    $(".old-price").css("display", "block");

                    // On calcule le prix avec le code promo pour chaque élément du Model
                    let allPrices = []
                    $(".itemPanier").each(function (index, element) {
                        var price = parseFloat($(element).find(".price").text().replace("€", "").trim());
                        var quantity = parseInt($(element).find(".item-quantity p").text());
                        var newPrice = price - (price * data.reduction /100);
                        allPrices.push(newPrice);
                    });

                    // On stocke allPrices dans les cookies
                    setCookie("allPrices", JSON.stringify(allPrices), 1);


                }
            },
            error: function (xhr, status, error) {
                console.error("Erreur Ajax :", error);
                console.error("Réponse serveur :", xhr.responseText);
            }
        });
    });

</script>
