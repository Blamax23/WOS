@using WOS.Model;

@model Produit

@{
    ViewData["Title"] = @Model.Nom;
}

<link rel="stylesheet" href="~/css/product/viewProduct.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/items/itemTailleProduit.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/items/itemAvis.css" asp-append-version="true" />

<div class="content">
    <div class="product">
        <div class="images-product">
            <div class="main-image">
                <img src="@Url.Content(Model.ProduitImages.FirstOrDefault(i => i.Principale)?.Url ?? "~/images/default.jpg")" alt="@Model.Nom" />
            </div>
            <div class="other-images">
                @foreach (var image in Model.ProduitImages)
                {
                    <img src="@Url.Content(image.Url)" class="@(image.Principale ? "selected" : "")" alt="@Model.Nom" />
                }
            </div>
        </div>
        <div class="detail-product">
            <div class="title-product">
                <h1>@Model.Nom</h1>
            </div>
            <h3>Tailles</h3>
            <div class="grid-taille">
                @foreach (var stock in Model.ProduitTailles.Where(t => t.Stock > 0).OrderBy(t => t.Taille))
                {
                    <div class="taille-element">
                        <p><strong>@stock.Taille EUR</strong></p>
                        @if (stock.PrixPromo != null)
                        {
                            <p>
                                <span class="promo-price">@stock.PrixPromo.Value.ToString("C")</span>
                                <span class="old-price">@stock.Prix.ToString("C")</span>
                            </p>
                        }
                        else
                        {
                            <p><span class="price">@stock.Prix.ToString("C")</span></p>
                        }
                    </div>
                }
            </div>
            <div class="add-to-cart">
                <button class="btn confirm-btn">Ajouter au panier</button>
            </div>
            <div class="infos-product">
                <div class="description-product">
                    <p>@Model.Description</p>
                </div>
                <p class="marqueInfo"><strong>Marque:</strong> @Model.Marque.Nom</p>
                <p class="categorieInfo"><strong>Catégorie:</strong> @Model.Categorie.Nom</p>
                <!-- On concatène toutes les couleurs de la chaussures avec "/" comme séparation -->
                <p class="couleurInfo"><strong>Couleur:</strong> @string.Join("/", Model.ProduitCouleurs.Select(c => c.Couleur))</p>
            </div>
            <div class="info-zone avis-zone">
                <div class="head-list-avis">
                    <p>Avis</p>
                    <i class="bi bi-chevron-right"></i>
                </div>
                <div class="carousel-avis">
                    <p class="arrow left" onclick="prevSlide()"><i class="bi bi-caret-left-fill"></i></p>
                    <div class="list-avis">
                        <div class="list-inner">
                            @foreach (var avis in Model.Avis)
                            {
                                <div class="avis">
                                    <div class="head-avis">
                                        <div class="name-zone">
                                            <i class="bi bi-person-circle"></i>
                                            <p><strong>@avis.Client.Prenom</strong></p>
                                        </div>
                                        <div class="stars">
                                            @{
                                                var stopI = 0;
                                            }
                                            @for (int i = 1; i < avis.Note; i++)
                                            {
                                                <i class="bi bi-star-fill"></i>
                                                stopI = i;
                                            }
                                            @if (stopI + 0.5 == avis.Note)
                                            {
                                                stopI++;
                                                <i class="bi bi-star-half"></i>
                                            }
                                            @for (int i = stopI + 1; i <= 5; i++)
                                            {
                                                <i class="bi bi-star"></i>
                                            }

                                        </div>
                                    </div>
                                    <div class="content-avis">
                                        <p>@avis.Commentaire</p>
                                    </div>
                                    <p class="date-avis">@avis.DateAvis.ToShortDateString()</p>
                                </div>
                            }
                        </div>
                    </div>
                    <p class="arrow right" onclick="nextSlide()"><i class="bi bi-caret-right-fill"></i></p>
                </div>
            </div>
            <div class="info-zone livraison-zone">
                <div class="head-livraison">
                    <p>Livraison</p>
                    <i class="bi bi-chevron-right"></i>
                </div>
                <div class="livraison-info">
                    <p><strong>Transporteur :</strong> Colissimo et Mondial Relay</p>
                    <p><strong>Modes de livraison :</strong> à domicile ou en point relais.</p>
                    <p><strong>Frais de port : </strong> gratuit en livraison a domicile et en point relais dans toute la France métropolitaine.</p>
                    <p><strong>Retours : </strong> Vous pouvez faire une demande de remboursement pour toute commande sous 14 jours après réception de votre colis.</p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
    </script>
}

<script>
    $(".other-images img").each(function () {
        $(this).click(function () {
            $(".other-images img").each(function () {
                $(this).removeClass("selected");
            });

            $(this).addClass("selected");

            const newSrc = $(this).attr("src");

            $(".main-image img").attr("src", newSrc);
        });
    });

    $(".taille-element").each(function () {
        $(this).click(function () {
            if ($(this).hasClass("size-selected")) {
                $(".taille-element").each(function () {
                    $(this).removeClass("size-selected");
                });
            } else {
                $(".taille-element").each(function () {
                    $(this).removeClass("size-selected");
                });

                $(this).addClass("size-selected");
            }
        });
    });

    $(".add-to-cart .confirm-btn").click(function () {
        const tailleSelectionnee = $(".taille-element.size-selected strong").text();

        if (!tailleSelectionnee) {
            alert("Veuillez sélectionner une taille avant d'ajouter au panier.");
            return;
        }

        const produitId = @Model.Id; // ID du produit
        const nomProduit = "@Model.Nom";
        const prix = $(".taille-element.size-selected .promo-price").text() || $(".taille-element.size-selected .price").text();

        // Requête AJAX pour ajouter au panier
        $.ajax({
            url: '/Panier/AddToCart', // Endpoint de l'action
            type: 'POST',
            contentType: 'application/x-www-form-urlencoded',
            data: {
                productId: produitId,
                name: nomProduit,
                price: prix.replace("€", "").trim(),
                url: "@Model.ProduitImages.FirstOrDefault(i => i.Principale)?.Url" ?? "~/images/default.jpg",
                size: tailleSelectionnee
            },
            success: function (response) {
                // alert("Produit ajouté au panier !");
                console.log(response);

                // On met le nombre de produits différents
                $(".cart-count").text(response.length);

                // Mettre à jour le prix total du panier
                $(".cart-total").text(response.cartTotal + " €");

                // Mettre à jour l'affichage du panier
                $(".cart-items").empty();
                response.forEach(item => {
                    console.log(item);
                    $(".cart-items").append(`
                                <div class="cart-item"  data-product-id="item-${item.productId}" data-size="${item.size}">
                                    <img src="${item.url}" alt="${item.name}" class="cart-item-image" />
                                    <div class="cart-item-details">
                                        <p class="cart-item-name">${item.name}</p>
                                        <div class="item-infos">
                                            <p class="cart-item-price">Taille: ${item.size}</p>
                                        </div>
                                        <div class="cart-item-quantity">
                                            <div class="quantity-zone">
                                                <label for="quantity-${item.productId}">Quantité :</label>
                                                <!-- Dropdown pour la quantité -->
                                                    <select id="quantity-${item.productId}" class="quantity-input" data-size="${item.size}" data-product-id="${item.productId}"">
                                                    ${[...Array(16).keys()].map(i => `
                                                        <option value="${i}" ${i === item.quantity ? "selected" : ""}>${i}</option>
                                                    `).join('')}
                                                </select>
                                            </div>
                                            <p class="cart-item-price">${item.price} €</p>
                                        </div>
                                    </div>
                                    <i class="bi bi-trash remove-btn" data-product-id="${item.productId}" data-size="${item.size}"></i>
                                </div>
                            `);
                });

                // On ouvre le modal
                $(".cart-modal").css("right", "0");

                // On déselectionne toutes les tailles
                $(".taille-element").each(function () {
                    $(this).removeClass("size-selected");
                });
            },
            error: function (xhr, status, error) {
                console.error("Erreur lors de l'ajout au panier : ", error);
                alert("Une erreur est survenue. Veuillez réessayer.");
            }
        });
    });
</script>

<script>
    // On fait la logique de carousel pour slider les avis
    let currentSlide = 0;

    const slides = $(".avis");
    const slidesCount = slides.length;

    function nextSlide() {
        if (currentSlide < slidesCount - 1) {
            currentSlide++;
        } else {
            currentSlide = 0;
        }

        console.log(currentSlide);

        // On affiche la valeur de la translationX
        console.log(-100/ slidesCount);

        if(currentSlide == 0){
            $(".list-inner").css("transform", `translateX(0%)`);
        }else{
            $(".list-inner").css("transform", `translateX(-${100 / slidesCount}%)`);
        }
        

        // On affiche le css transform actuel
        console.log($(".list-inner").css("transform"));
    }

    function prevSlide() {
        if (currentSlide > 0) {
            currentSlide--;
        } else {
            currentSlide = slidesCount - 1;
        }

        if (currentSlide == 0) {
            $(".list-inner").css("transform", `translateX(0%)`);
        }else{
            $(".list-inner").css("transform", `translateX(-${100 / slidesCount}%)`);
        }

    }

    $(".head-list-avis").click(function () {
        const carousel = $(".carousel-avis");

        if (carousel.hasClass("open")) {
            // Fermer avec une animation
            carousel.css("height", carousel[0].scrollHeight + "px"); // Définit la hauteur actuelle
            setTimeout(() => {
                carousel.css("height", "0"); // Passe à 0 pour la fermeture
            }, 10); // Petit délai pour permettre au navigateur de prendre en charge la transition
        } else {
            // Ouvrir avec une animation
            carousel.css("height", carousel[0].scrollHeight + "px"); // Définit la hauteur réelle
            setTimeout(() => {
                carousel.css("height", "auto"); // Remet en auto une fois l'animation terminée
            }, 500); // Durée de la transition
        }

        carousel.toggleClass("open");
        $(".head-list-avis i").toggleClass("rotate");
    });

    $(".head-livraison").click(function () {
        const infos = $(".livraison-info");

        if (infos.hasClass("open")) {
            // Fermer avec une animation
            infos.css("height", infos[0].scrollHeight + "px"); // Définit la hauteur actuelle
            setTimeout(() => {
                infos.css("height", "0"); // Passe à 0 pour la fermeture
            }, 10); // Petit délai pour permettre au navigateur de prendre en charge la transition
        } else {
            // Ouvrir avec une animation
            infos.css("height", infos[0].scrollHeight + "px"); // Définit la hauteur réelle
            setTimeout(() => {
                infos.css("height", "auto"); // Remet en auto une fois l'animation terminée
            }, 500); // Durée de la transition
        }

        infos.toggleClass("open");
        $(".head-livraison i").toggleClass("rotate");
    });

    $(".list-avis").click(function (e) {
        e.stopPropagation();
    });

    $(".livraison-zone").click(function (e) {
        e.stopPropagation();
    });

    $(document).click(function () {
        $(".list-avis").removeClass("open");
        $(".livraison-zone").removeClass("open");
    });

    $(".arrow").click(function (e) {
        e.stopPropagation();
    });

    $(".arrow").click(function (e) {
        e.stopPropagation();
    });

    $(".list-inner").css("width", `${slidesCount * 100}%`);
    $(".avis").css("width", `${100 / slidesCount}%`);

    // $(window).resize(function () {
    //     $(".list-inner").css("width", `${slidesCount * 100}%`);
    //     $(".avis").css("width", `${100 / slidesCount}%`);
    // });

    // $(".list-inner").css("transform", `translateX(-${currentSlide * 100}%)`);

    // $(".list-inner").on("swipeleft", function () {
    //     nextSlide();
    // });

    // $(".list-inner").on("swiperight", function () {
    //     prevSlide();
    // });

    // $(".list-inner").on("swipeup", function () {
    //     nextSlide();
    // });

    // $(".list-inner").on("swipedown", function () {
    //     prevSlide();
    // });

    // $(".list-inner").on("swipe", function (e) {
    //     if (e.swipestart.coords[0] > e.swipestop.coords[0]) {
    //         nextSlide();
    //     } else {
    //         prevSlide();
    //     }
    // });

    // $(".list-inner").on("swipeend", function () {
    //     $(".list-inner").css("transition", "transform 0.5s ease");
    //     $(".list-inner").css("transform", `translateX(-${currentSlide * 100}%)`);
    // });

    // $(".list-inner").on("swipecancel", function () {
    //     $(".list-inner").css("transition", "transform 0.5s ease");
    //     $(".list-inner").css("transform", `translateX(-${currentSlide * 100}%)`);
    // });

    // $(".list-inner").on("swipeleft", function () {
    //     nextSlide();
    // });

    // $(".list-inner").on("swiperight", function () {
    //     prevSlide();
    // });

    // $(".list-inner").on("swipeup", function () {
    //     nextSlide();
    // });

    // $(".list-inner").on("swipedown", function () {
    //     prevSlide();
    // });


</script>
