@using WOS.Model;

@model ViewFinalPurchase;

<div class="head-panier">
    <div class="step step-1 active">
        <div class="circle" id="step-1">1</div>
        <p>Validation</p>
    </div>
    <div class="line active" id="between-step-1-2"></div>
    <div class="step step-2 active">
        <div class="circle" id="step-2">2</div>
        <p>Informations</p>
    </div>
    <div class="line active" id="between-step-2-3"></div>
    <div class="step step-3 active">
        <div class="circle" id="step-3">3</div>
        <p>Paiement</p>
    </div>
</div>
<div class="purchaseWay">
    <div class="recapitulatif">
        <div class="panier-final">
            <h3>Panier</h3>
            @foreach (var item in Model.Cart)
            {
                <div class="itemPanier">
                    <div class="item-image">
                        <img src="@Url.Content(item.ImageUrl)" />
                    </div>
                    <div class="item-infos">
                        <div class="item-title">
                            <h2>@item.Name</h2>
                            <h2 class="price">@item.Price.ToString("C")</h2>
                        </div>
                        <div class="item-details">
                            <div class="item-size">
                                <h3>Taille</h3>
                                <p>@item.Size</p>
                            </div>
                            <div class="item-quantity">
                                <h3>Quantité</h3>
                                <p>@item.Quantity</p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="mode-livraison-final">
            <h3>Mode de livraison</h3>
            <div class="delivery-mode">
                <img src="@Url.Content(Model.ModeLivraison.PathLogo)"/>
                <h3 class="name-delivery-mode">@Model.ModeLivraison.Nom</h3>
                <p class="delivery-price"><string>@Model.ModeLivraison.PrixLivraison.ToString("C")</string></p>
            </div>
        </div>
    </div>
    <div class="">
        <h2>Paiement </h2>
        <div class="form-info-purchase">
            <div class="fullname-zone">
                <div class="name-zone">
                    <label for="name">Nom</label>
                    <input type="text" id="name" name="name" required>
                </div>
                <div class="firstname-zone">
                    <label for="firstname">Prénom</label>
                    <input type="text" id="firstname" name="firstname" required>
                </div>
            </div>
            <div class="address-zone">
                <div class="address-place-zone">
                    <label for="address">Adresse</label>
                    <input type="text" id="address" name="address" required>
                </div>
                <div class="postal-code-zone">
                    <label for="postal-code">Code postal</label>
                    <input type="text" id="postal-code" name="postal-code" maxlength="10" required>
                </div>
                <div class="city-zone">
                    <label for="city">Ville</label>
                    <input type="text" id="city" name="city" required>
                </div>
                <div class="country-zone">
                    <select id="country" name="country">
                        <option value="">Sélectionnez un pays</option>
                    </select>
                </div>
            </div>

        </div>
        <div class="btn-actions">
            <button class="btn cancel-btn step-3-to-2">Annuler</button>
            <button class="btn confirm-btn confirm-purchase">Suivant</button>
        </div>
    </div>
</div>

<script>
    $.ajax({
        url: 'https://restcountries.com/v3.1/all',
        type: 'GET',
        success: function (data) {
            const $countrySelect = $('#country');
            data.sort((a, b) => a.name.common === 'France' ? -1 : b.name.common === 'France' ? 1 : a.name.common.localeCompare(b.name.common));
            data.forEach(function (country) {
                const option = $('<option></option>')
                    .val(country.cca2) // Code ISO du pays
                    .text(country.name.common); // Nom courant
                $countrySelect.append(option);
            });
        },
        error: function (xhr, status, error) {
            console.error('Erreur :', error);
        }
    });

    // Click sur le bouton step-1-to-2
    $(".step-2-to-3").click(function () {
        // On fait une requête ajax
        $.ajax({
            url: "/Panier/NextStepPurchase",
            type: "POST",
            data: {
                actualStep: 2
            },
            success: function (data) {
                $(".content").html(data);
            }
        });
    });

    // Click sur le bouton step-2-to-1
    $(".step-3-to-2").click(function () {
        localStorage.setItem('currentStep', 1);
        // On fait une requête ajax
        $.ajax({
            url: "/Panier/PreviousStepPurchase",
            type: "POST",
            data: {
                actualStep: 3
            },
            success: function (data) {
                $(".content").html(data);
            }
        });
    });

    // On récupère l'objet delivery info dans le localStorage
    const deliveryInfo = JSON.parse(localStorage.getItem('deliveryInfo'));
    console.log(deliveryInfo);

    // Si l'objet deliveryInfo n'est pas null
    if (deliveryInfo !== null) {
    }
</script>
